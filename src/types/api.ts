/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/health-check": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            success: boolean;
                            message: string;
                            responseObject?: unknown;
                            statusCode: number;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/auth/register/client": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        /** Format: email */
                        email: string;
                        firstName: string;
                        lastName: string;
                        phone?: string;
                        password: string;
                    };
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            success: boolean;
                            message: string;
                            responseObject?: {
                                /** @example User registered successfully */
                                message: string;
                                user: {
                                    /** Format: uuid */
                                    id: string;
                                    /** Format: email */
                                    email: string;
                                };
                            };
                            statusCode: number;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/auth/register/mechanic": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        /** Format: email */
                        email: string;
                        firstName: string;
                        lastName: string;
                        phone?: string;
                        password: string;
                    };
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            success: boolean;
                            message: string;
                            responseObject?: {
                                /** @example User registered successfully */
                                message: string;
                                user: {
                                    /** Format: uuid */
                                    id: string;
                                    /** Format: email */
                                    email: string;
                                };
                            };
                            statusCode: number;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/auth/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        /**
                         * Format: email
                         * @description User email
                         * @example user@example.com
                         */
                        email: string;
                        /**
                         * @description User password
                         * @example password123
                         */
                        password: string;
                    };
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            success: boolean;
                            message: string;
                            responseObject?: {
                                /** @example Login successful */
                                message: string;
                                user: {
                                    /** Format: uuid */
                                    id: string;
                                    /** Format: email */
                                    email: string;
                                };
                            };
                            statusCode: number;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/auth/logout": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            success: boolean;
                            message: string;
                            responseObject?: {
                                /** @example Logout successful */
                                message: string;
                            };
                            statusCode: number;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/auth/check": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            success: boolean;
                            message: string;
                            responseObject?: {
                                /** @example User is authenticated */
                                message: string;
                                user?: {
                                    /** Format: uuid */
                                    id: string;
                                    /** Format: email */
                                    email: string;
                                    /** @example client */
                                    role: string;
                                };
                            };
                            statusCode: number;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            success: boolean;
                            message: string;
                            responseObject?: {
                                /**
                                 * Format: uuid
                                 * @description UUID of the user
                                 */
                                id: string;
                                /** @example John */
                                firstName: string;
                                /** @example Doe */
                                lastName: string;
                                /** @example password123 */
                                password: string;
                                /**
                                 * Format: email
                                 * @example john.doe@example.com
                                 */
                                email: string;
                                /** @example +123456789 */
                                phone?: string;
                                /** @example 12345 */
                                zipCode?: string;
                                /**
                                 * @description Role of the user (client, mechanic, admin)
                                 * @example client
                                 * @enum {string}
                                 */
                                role: "client" | "mechanic" | "admin";
                                /** @example acct_123ABC */
                                stripeAccountId?: string;
                                /**
                                 * @default false
                                 * @example false
                                 */
                                isVerified: boolean;
                                /**
                                 * Format: date-time
                                 * @description Timestamp of account creation
                                 * @example 2024-01-01T00:00:00.000Z
                                 */
                                createdAt: string;
                                /**
                                 * Format: date-time
                                 * @description Timestamp of account update
                                 * @example 2024-01-01T00:00:00.000Z
                                 */
                                updatedAt: string;
                            };
                            statusCode: number;
                        };
                    };
                };
            };
        };
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        /** Format: email */
                        email?: string;
                        firstName?: string;
                        lastName?: string;
                        phone?: string;
                        zipCode?: string;
                    };
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            success: boolean;
                            message: string;
                            responseObject?: {
                                /**
                                 * Format: uuid
                                 * @description UUID of the user
                                 */
                                id: string;
                                /** @example John */
                                firstName: string;
                                /** @example Doe */
                                lastName: string;
                                /** @example password123 */
                                password: string;
                                /**
                                 * Format: email
                                 * @example john.doe@example.com
                                 */
                                email: string;
                                /** @example +123456789 */
                                phone?: string;
                                /** @example 12345 */
                                zipCode?: string;
                                /**
                                 * @description Role of the user (client, mechanic, admin)
                                 * @example client
                                 * @enum {string}
                                 */
                                role: "client" | "mechanic" | "admin";
                                /** @example acct_123ABC */
                                stripeAccountId?: string;
                                /**
                                 * @default false
                                 * @example false
                                 */
                                isVerified: boolean;
                                /**
                                 * Format: date-time
                                 * @description Timestamp of account creation
                                 * @example 2024-01-01T00:00:00.000Z
                                 */
                                createdAt: string;
                                /**
                                 * Format: date-time
                                 * @description Timestamp of account update
                                 * @example 2024-01-01T00:00:00.000Z
                                 */
                                updatedAt: string;
                            };
                            statusCode: number;
                        };
                    };
                };
            };
        };
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/mechanics": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        /** Format: email */
                        email: string;
                        firstName: string;
                        lastName: string;
                        phone?: string;
                        password: string;
                    };
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            success: boolean;
                            message: string;
                            responseObject?: {
                                /**
                                 * Format: uuid
                                 * @description UUID of the user
                                 */
                                id: string;
                                /** @example John */
                                firstName: string;
                                /** @example Doe */
                                lastName: string;
                                /** @example password123 */
                                password: string;
                                /**
                                 * Format: email
                                 * @example john.doe@example.com
                                 */
                                email: string;
                                /** @example +123456789 */
                                phone?: string;
                                /** @example 12345 */
                                zipCode?: string;
                                /**
                                 * @description Role of the user (client, mechanic, admin)
                                 * @example client
                                 * @enum {string}
                                 */
                                role: "client" | "mechanic" | "admin";
                                /** @example acct_123ABC */
                                stripeAccountId?: string;
                                /**
                                 * @default false
                                 * @example false
                                 */
                                isVerified: boolean;
                                /**
                                 * Format: date-time
                                 * @description Timestamp of account creation
                                 * @example 2024-01-01T00:00:00.000Z
                                 */
                                createdAt: string;
                                /**
                                 * Format: date-time
                                 * @description Timestamp of account update
                                 * @example 2024-01-01T00:00:00.000Z
                                 */
                                updatedAt: string;
                            };
                            statusCode: number;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/clients": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        /** Format: email */
                        email: string;
                        firstName: string;
                        lastName: string;
                        phone?: string;
                        password: string;
                    };
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            success: boolean;
                            message: string;
                            responseObject?: {
                                /**
                                 * Format: uuid
                                 * @description UUID of the user
                                 */
                                id: string;
                                /** @example John */
                                firstName: string;
                                /** @example Doe */
                                lastName: string;
                                /** @example password123 */
                                password: string;
                                /**
                                 * Format: email
                                 * @example john.doe@example.com
                                 */
                                email: string;
                                /** @example +123456789 */
                                phone?: string;
                                /** @example 12345 */
                                zipCode?: string;
                                /**
                                 * @description Role of the user (client, mechanic, admin)
                                 * @example client
                                 * @enum {string}
                                 */
                                role: "client" | "mechanic" | "admin";
                                /** @example acct_123ABC */
                                stripeAccountId?: string;
                                /**
                                 * @default false
                                 * @example false
                                 */
                                isVerified: boolean;
                                /**
                                 * Format: date-time
                                 * @description Timestamp of account creation
                                 * @example 2024-01-01T00:00:00.000Z
                                 */
                                createdAt: string;
                                /**
                                 * Format: date-time
                                 * @description Timestamp of account update
                                 * @example 2024-01-01T00:00:00.000Z
                                 */
                                updatedAt: string;
                            };
                            statusCode: number;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/bookings": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            success: boolean;
                            message: string;
                            responseObject?: {
                                /**
                                 * Format: uuid
                                 * @description UUID of the booking
                                 */
                                id: string;
                                /**
                                 * @description List of selected jobs
                                 * @example [
                                 *       "Oil Change",
                                 *       "Tire Replacement"
                                 *     ]
                                 */
                                selectedJobs: string[];
                                /**
                                 * @description Total price for the booking
                                 * @example 500
                                 */
                                totalPrice: number;
                                /** @description List of part items with prices */
                                partItemsPrices?: {
                                    /** Format: uuid */
                                    id: string;
                                    price: number;
                                }[];
                                /**
                                 * @description Booking status
                                 * @default pending
                                 * @example pending
                                 * @enum {string}
                                 */
                                status: "pending" | "accepted" | "completed" | "open" | "canceled" | "authorized" | "expired" | "failed" | "paid";
                                /**
                                 * Format: uuid
                                 * @description UUID of the client
                                 */
                                clientId: string;
                                /**
                                 * Format: uuid
                                 * @description UUID of the mechanic (optional)
                                 */
                                mechanicId?: string;
                                /**
                                 * Format: uuid
                                 * @description UUID of the car
                                 */
                                carId: string;
                                /** @description List of pending jobs associated with this booking */
                                pendingJobs?: {
                                    /**
                                     * Format: uuid
                                     * @description UUID of the pending job
                                     */
                                    id: string;
                                    /**
                                     * @description Description of the pending job
                                     * @example Brake replacement
                                     */
                                    description: string;
                                    /**
                                     * @description Estimated time for the pending job (hours)
                                     * @example 3
                                     */
                                    estimatedTime: number;
                                    /**
                                     * @description Estimated cost for the pending job
                                     * @example 150
                                     */
                                    estimatedCost: number;
                                }[];
                                /** @description List of jobs associated with this booking */
                                jobs?: {
                                    /**
                                     * Format: uuid
                                     * @description UUID of the job
                                     */
                                    id: string;
                                    /**
                                     * @description Name of the job
                                     * @example Oil Change
                                     */
                                    jobName: string;
                                    /**
                                     * @description Time required for the job (hours)
                                     * @example 2
                                     */
                                    timeRequired: number;
                                    /**
                                     * @description Status of the job
                                     * @example pending
                                     * @enum {string}
                                     */
                                    status: "pending" | "in_progress" | "completed";
                                }[];
                                /** @description Location details */
                                location?: {
                                    /**
                                     * Format: uuid
                                     * @description UUID of the location
                                     */
                                    id: string;
                                    /**
                                     * @description Street address
                                     * @example 123 Main St
                                     */
                                    address: string;
                                    /**
                                     * @description City
                                     * @example New York
                                     */
                                    city: string;
                                    /**
                                     * @description Postal or ZIP code
                                     * @example 10001
                                     */
                                    postalCode: string;
                                    /**
                                     * @description State or Province
                                     * @example New York
                                     */
                                    state?: string;
                                    /**
                                     * @description Country
                                     * @example USA
                                     */
                                    country: string;
                                    /**
                                     * @description Latitude
                                     * @example 40.7128
                                     */
                                    latitude?: number;
                                    /**
                                     * @description Longitude
                                     * @example -74.006
                                     */
                                    longitude?: number;
                                };
                                /** @description List of schedules associated with this booking */
                                schedules?: {
                                    /** Format: uuid */
                                    id?: string;
                                    timeInterval: string;
                                    dates?: string[];
                                }[];
                                /**
                                 * Format: date-time
                                 * @description Timestamp of booking creation
                                 * @example 2024-01-01T00:00:00.000Z
                                 */
                                createdAt: string;
                            }[];
                            statusCode: number;
                        };
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        partItems: {
                            /** Format: uuid */
                            id: string;
                            price: number;
                        }[];
                        /** Format: uuid */
                        selectedCar: string;
                        postalCode: string;
                        timeSlots: {
                            date: string;
                            time: string;
                        }[];
                        jobs: {
                            duration: number;
                            price: number;
                            /** Format: uuid */
                            id: string;
                        }[];
                    };
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            success: boolean;
                            message: string;
                            responseObject?: {
                                /**
                                 * Format: uuid
                                 * @description UUID of the booking
                                 */
                                id: string;
                                /**
                                 * @description List of selected jobs
                                 * @example [
                                 *       "Oil Change",
                                 *       "Tire Replacement"
                                 *     ]
                                 */
                                selectedJobs: string[];
                                /**
                                 * @description Total price for the booking
                                 * @example 500
                                 */
                                totalPrice: number;
                                /** @description List of part items with prices */
                                partItemsPrices?: {
                                    /** Format: uuid */
                                    id: string;
                                    price: number;
                                }[];
                                /**
                                 * @description Booking status
                                 * @default pending
                                 * @example pending
                                 * @enum {string}
                                 */
                                status: "pending" | "accepted" | "completed" | "open" | "canceled" | "authorized" | "expired" | "failed" | "paid";
                                /**
                                 * Format: uuid
                                 * @description UUID of the client
                                 */
                                clientId: string;
                                /**
                                 * Format: uuid
                                 * @description UUID of the mechanic (optional)
                                 */
                                mechanicId?: string;
                                /**
                                 * Format: uuid
                                 * @description UUID of the car
                                 */
                                carId: string;
                                /** @description List of pending jobs associated with this booking */
                                pendingJobs?: {
                                    /**
                                     * Format: uuid
                                     * @description UUID of the pending job
                                     */
                                    id: string;
                                    /**
                                     * @description Description of the pending job
                                     * @example Brake replacement
                                     */
                                    description: string;
                                    /**
                                     * @description Estimated time for the pending job (hours)
                                     * @example 3
                                     */
                                    estimatedTime: number;
                                    /**
                                     * @description Estimated cost for the pending job
                                     * @example 150
                                     */
                                    estimatedCost: number;
                                }[];
                                /** @description List of jobs associated with this booking */
                                jobs?: {
                                    /**
                                     * Format: uuid
                                     * @description UUID of the job
                                     */
                                    id: string;
                                    /**
                                     * @description Name of the job
                                     * @example Oil Change
                                     */
                                    jobName: string;
                                    /**
                                     * @description Time required for the job (hours)
                                     * @example 2
                                     */
                                    timeRequired: number;
                                    /**
                                     * @description Status of the job
                                     * @example pending
                                     * @enum {string}
                                     */
                                    status: "pending" | "in_progress" | "completed";
                                }[];
                                /** @description Location details */
                                location?: {
                                    /**
                                     * Format: uuid
                                     * @description UUID of the location
                                     */
                                    id: string;
                                    /**
                                     * @description Street address
                                     * @example 123 Main St
                                     */
                                    address: string;
                                    /**
                                     * @description City
                                     * @example New York
                                     */
                                    city: string;
                                    /**
                                     * @description Postal or ZIP code
                                     * @example 10001
                                     */
                                    postalCode: string;
                                    /**
                                     * @description State or Province
                                     * @example New York
                                     */
                                    state?: string;
                                    /**
                                     * @description Country
                                     * @example USA
                                     */
                                    country: string;
                                    /**
                                     * @description Latitude
                                     * @example 40.7128
                                     */
                                    latitude?: number;
                                    /**
                                     * @description Longitude
                                     * @example -74.006
                                     */
                                    longitude?: number;
                                };
                                /** @description List of schedules associated with this booking */
                                schedules?: {
                                    /** Format: uuid */
                                    id?: string;
                                    timeInterval: string;
                                    dates?: string[];
                                }[];
                                /**
                                 * Format: date-time
                                 * @description Timestamp of booking creation
                                 * @example 2024-01-01T00:00:00.000Z
                                 */
                                createdAt: string;
                            };
                            statusCode: number;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/bookings/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            success: boolean;
                            message: string;
                            responseObject?: {
                                /**
                                 * Format: uuid
                                 * @description UUID of the booking
                                 */
                                id: string;
                                /**
                                 * @description List of selected jobs
                                 * @example [
                                 *       "Oil Change",
                                 *       "Tire Replacement"
                                 *     ]
                                 */
                                selectedJobs: string[];
                                /**
                                 * @description Total price for the booking
                                 * @example 500
                                 */
                                totalPrice: number;
                                /** @description List of part items with prices */
                                partItemsPrices?: {
                                    /** Format: uuid */
                                    id: string;
                                    price: number;
                                }[];
                                /**
                                 * @description Booking status
                                 * @default pending
                                 * @example pending
                                 * @enum {string}
                                 */
                                status: "pending" | "accepted" | "completed" | "open" | "canceled" | "authorized" | "expired" | "failed" | "paid";
                                /**
                                 * Format: uuid
                                 * @description UUID of the client
                                 */
                                clientId: string;
                                /**
                                 * Format: uuid
                                 * @description UUID of the mechanic (optional)
                                 */
                                mechanicId?: string;
                                /**
                                 * Format: uuid
                                 * @description UUID of the car
                                 */
                                carId: string;
                                /** @description List of pending jobs associated with this booking */
                                pendingJobs?: {
                                    /**
                                     * Format: uuid
                                     * @description UUID of the pending job
                                     */
                                    id: string;
                                    /**
                                     * @description Description of the pending job
                                     * @example Brake replacement
                                     */
                                    description: string;
                                    /**
                                     * @description Estimated time for the pending job (hours)
                                     * @example 3
                                     */
                                    estimatedTime: number;
                                    /**
                                     * @description Estimated cost for the pending job
                                     * @example 150
                                     */
                                    estimatedCost: number;
                                }[];
                                /** @description List of jobs associated with this booking */
                                jobs?: {
                                    /**
                                     * Format: uuid
                                     * @description UUID of the job
                                     */
                                    id: string;
                                    /**
                                     * @description Name of the job
                                     * @example Oil Change
                                     */
                                    jobName: string;
                                    /**
                                     * @description Time required for the job (hours)
                                     * @example 2
                                     */
                                    timeRequired: number;
                                    /**
                                     * @description Status of the job
                                     * @example pending
                                     * @enum {string}
                                     */
                                    status: "pending" | "in_progress" | "completed";
                                }[];
                                /** @description Location details */
                                location?: {
                                    /**
                                     * Format: uuid
                                     * @description UUID of the location
                                     */
                                    id: string;
                                    /**
                                     * @description Street address
                                     * @example 123 Main St
                                     */
                                    address: string;
                                    /**
                                     * @description City
                                     * @example New York
                                     */
                                    city: string;
                                    /**
                                     * @description Postal or ZIP code
                                     * @example 10001
                                     */
                                    postalCode: string;
                                    /**
                                     * @description State or Province
                                     * @example New York
                                     */
                                    state?: string;
                                    /**
                                     * @description Country
                                     * @example USA
                                     */
                                    country: string;
                                    /**
                                     * @description Latitude
                                     * @example 40.7128
                                     */
                                    latitude?: number;
                                    /**
                                     * @description Longitude
                                     * @example -74.006
                                     */
                                    longitude?: number;
                                };
                                /** @description List of schedules associated with this booking */
                                schedules?: {
                                    /** Format: uuid */
                                    id?: string;
                                    timeInterval: string;
                                    dates?: string[];
                                }[];
                                /**
                                 * Format: date-time
                                 * @description Timestamp of booking creation
                                 * @example 2024-01-01T00:00:00.000Z
                                 */
                                createdAt: string;
                            };
                            statusCode: number;
                        };
                    };
                };
            };
        };
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        selectedJobs?: string[];
                        totalPrice?: number;
                        partItemsPrices?: {
                            /** Format: uuid */
                            id: string;
                            price: number;
                        }[];
                        status?: "pending" | "accepted" | "completed" | "open" | "canceled" | "authorized" | "expired" | "failed" | "paid";
                        /** Format: uuid */
                        clientId?: string;
                        /** Format: uuid */
                        mechanicId?: string;
                        /** Format: uuid */
                        carId?: string;
                        pendingJobs?: {
                            /** Format: uuid */
                            id: string;
                            description: string;
                            estimatedTime: number;
                            estimatedCost: number;
                        }[];
                        jobs?: {
                            /** Format: uuid */
                            id: string;
                            jobName: string;
                            timeRequired: number;
                            status: string;
                        }[];
                        location?: {
                            /** Format: uuid */
                            id?: string;
                            address: string;
                            city: string;
                            postalCode: string;
                            state?: string;
                            country: string;
                            latitude?: number;
                            longitude?: number;
                        };
                        schedules?: {
                            /** Format: uuid */
                            id?: string;
                            timeInterval: string;
                            dates?: string[];
                        }[];
                    };
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            success: boolean;
                            message: string;
                            responseObject?: {
                                /**
                                 * Format: uuid
                                 * @description UUID of the booking
                                 */
                                id: string;
                                /**
                                 * @description List of selected jobs
                                 * @example [
                                 *       "Oil Change",
                                 *       "Tire Replacement"
                                 *     ]
                                 */
                                selectedJobs: string[];
                                /**
                                 * @description Total price for the booking
                                 * @example 500
                                 */
                                totalPrice: number;
                                /** @description List of part items with prices */
                                partItemsPrices?: {
                                    /** Format: uuid */
                                    id: string;
                                    price: number;
                                }[];
                                /**
                                 * @description Booking status
                                 * @default pending
                                 * @example pending
                                 * @enum {string}
                                 */
                                status: "pending" | "accepted" | "completed" | "open" | "canceled" | "authorized" | "expired" | "failed" | "paid";
                                /**
                                 * Format: uuid
                                 * @description UUID of the client
                                 */
                                clientId: string;
                                /**
                                 * Format: uuid
                                 * @description UUID of the mechanic (optional)
                                 */
                                mechanicId?: string;
                                /**
                                 * Format: uuid
                                 * @description UUID of the car
                                 */
                                carId: string;
                                /** @description List of pending jobs associated with this booking */
                                pendingJobs?: {
                                    /**
                                     * Format: uuid
                                     * @description UUID of the pending job
                                     */
                                    id: string;
                                    /**
                                     * @description Description of the pending job
                                     * @example Brake replacement
                                     */
                                    description: string;
                                    /**
                                     * @description Estimated time for the pending job (hours)
                                     * @example 3
                                     */
                                    estimatedTime: number;
                                    /**
                                     * @description Estimated cost for the pending job
                                     * @example 150
                                     */
                                    estimatedCost: number;
                                }[];
                                /** @description List of jobs associated with this booking */
                                jobs?: {
                                    /**
                                     * Format: uuid
                                     * @description UUID of the job
                                     */
                                    id: string;
                                    /**
                                     * @description Name of the job
                                     * @example Oil Change
                                     */
                                    jobName: string;
                                    /**
                                     * @description Time required for the job (hours)
                                     * @example 2
                                     */
                                    timeRequired: number;
                                    /**
                                     * @description Status of the job
                                     * @example pending
                                     * @enum {string}
                                     */
                                    status: "pending" | "in_progress" | "completed";
                                }[];
                                /** @description Location details */
                                location?: {
                                    /**
                                     * Format: uuid
                                     * @description UUID of the location
                                     */
                                    id: string;
                                    /**
                                     * @description Street address
                                     * @example 123 Main St
                                     */
                                    address: string;
                                    /**
                                     * @description City
                                     * @example New York
                                     */
                                    city: string;
                                    /**
                                     * @description Postal or ZIP code
                                     * @example 10001
                                     */
                                    postalCode: string;
                                    /**
                                     * @description State or Province
                                     * @example New York
                                     */
                                    state?: string;
                                    /**
                                     * @description Country
                                     * @example USA
                                     */
                                    country: string;
                                    /**
                                     * @description Latitude
                                     * @example 40.7128
                                     */
                                    latitude?: number;
                                    /**
                                     * @description Longitude
                                     * @example -74.006
                                     */
                                    longitude?: number;
                                };
                                /** @description List of schedules associated with this booking */
                                schedules?: {
                                    /** Format: uuid */
                                    id?: string;
                                    timeInterval: string;
                                    dates?: string[];
                                }[];
                                /**
                                 * Format: date-time
                                 * @description Timestamp of booking creation
                                 * @example 2024-01-01T00:00:00.000Z
                                 */
                                createdAt: string;
                            };
                            statusCode: number;
                        };
                    };
                };
            };
        };
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            success: boolean;
                            message: string;
                            responseObject?: {
                                success: boolean;
                            };
                            statusCode: number;
                        };
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/jobs/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            success: boolean;
                            message: string;
                            responseObject?: {
                                success: boolean;
                            };
                            statusCode: number;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/jobs/articles": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        /** @description VIN of the car */
                        vin?: string;
                        /** @description Part of the car */
                        part?: string;
                    };
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            success: boolean;
                            message: string;
                            responseObject?: {
                                success: boolean;
                            };
                            statusCode: number;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/jobs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            success: boolean;
                            message: string;
                            responseObject?: {
                                /**
                                 * Format: uuid
                                 * @description UUID of the job
                                 */
                                id: string;
                                /**
                                 * @description Job name
                                 * @example Oil Change
                                 */
                                name: string;
                                /**
                                 * @description Time required for the job (in hours)
                                 * @example 2
                                 */
                                duration: number;
                                /**
                                 * @description Price for the job
                                 * @example 100
                                 */
                                pricePerHour: number;
                                /** @description Search query for the job */
                                searchQuery?: string;
                                /**
                                 * @description Quality tier
                                 * @default gold
                                 * @example gold
                                 * @enum {string}
                                 */
                                quality: "gold" | "silver" | "bronze";
                                /**
                                 * Format: uuid
                                 * @description UUID of the associated booking
                                 */
                                bookingId: string;
                                /**
                                 * Format: date-time
                                 * @description Timestamp of job creation
                                 * @example 2024-01-01T00:00:00.000Z
                                 */
                                createdAt: string;
                            }[];
                            statusCode: number;
                        };
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        name: string;
                        duration: number;
                        /** @enum {string} */
                        quality: "gold" | "silver" | "bronze";
                        pricePerHour: number;
                        searchQuery?: string;
                        /** Format: uuid */
                        bookingId: string;
                    };
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            success: boolean;
                            message: string;
                            responseObject?: {
                                /**
                                 * Format: uuid
                                 * @description UUID of the job
                                 */
                                id: string;
                                /**
                                 * @description Job name
                                 * @example Oil Change
                                 */
                                name: string;
                                /**
                                 * @description Time required for the job (in hours)
                                 * @example 2
                                 */
                                duration: number;
                                /**
                                 * @description Price for the job
                                 * @example 100
                                 */
                                pricePerHour: number;
                                /** @description Search query for the job */
                                searchQuery?: string;
                                /**
                                 * @description Quality tier
                                 * @default gold
                                 * @example gold
                                 * @enum {string}
                                 */
                                quality: "gold" | "silver" | "bronze";
                                /**
                                 * Format: uuid
                                 * @description UUID of the associated booking
                                 */
                                bookingId: string;
                                /**
                                 * Format: date-time
                                 * @description Timestamp of job creation
                                 * @example 2024-01-01T00:00:00.000Z
                                 */
                                createdAt: string;
                            };
                            statusCode: number;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/jobs/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            success: boolean;
                            message: string;
                            responseObject?: {
                                /**
                                 * Format: uuid
                                 * @description UUID of the job
                                 */
                                id: string;
                                /**
                                 * @description Job name
                                 * @example Oil Change
                                 */
                                name: string;
                                /**
                                 * @description Time required for the job (in hours)
                                 * @example 2
                                 */
                                duration: number;
                                /**
                                 * @description Price for the job
                                 * @example 100
                                 */
                                pricePerHour: number;
                                /** @description Search query for the job */
                                searchQuery?: string;
                                /**
                                 * @description Quality tier
                                 * @default gold
                                 * @example gold
                                 * @enum {string}
                                 */
                                quality: "gold" | "silver" | "bronze";
                                /**
                                 * Format: uuid
                                 * @description UUID of the associated booking
                                 */
                                bookingId: string;
                                /**
                                 * Format: date-time
                                 * @description Timestamp of job creation
                                 * @example 2024-01-01T00:00:00.000Z
                                 */
                                createdAt: string;
                            };
                            statusCode: number;
                        };
                    };
                };
            };
        };
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        name?: string;
                        duration?: number;
                        /** @enum {string} */
                        quality?: "gold" | "silver" | "bronze";
                        pricePerHour?: number;
                        searchQuery?: string;
                        /** Format: uuid */
                        bookingId?: string;
                    };
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            success: boolean;
                            message: string;
                            responseObject?: {
                                /**
                                 * Format: uuid
                                 * @description UUID of the job
                                 */
                                id: string;
                                /**
                                 * @description Job name
                                 * @example Oil Change
                                 */
                                name: string;
                                /**
                                 * @description Time required for the job (in hours)
                                 * @example 2
                                 */
                                duration: number;
                                /**
                                 * @description Price for the job
                                 * @example 100
                                 */
                                pricePerHour: number;
                                /** @description Search query for the job */
                                searchQuery?: string;
                                /**
                                 * @description Quality tier
                                 * @default gold
                                 * @example gold
                                 * @enum {string}
                                 */
                                quality: "gold" | "silver" | "bronze";
                                /**
                                 * Format: uuid
                                 * @description UUID of the associated booking
                                 */
                                bookingId: string;
                                /**
                                 * Format: date-time
                                 * @description Timestamp of job creation
                                 * @example 2024-01-01T00:00:00.000Z
                                 */
                                createdAt: string;
                            };
                            statusCode: number;
                        };
                    };
                };
            };
        };
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            success: boolean;
                            message: string;
                            responseObject?: {
                                success: boolean;
                            };
                            statusCode: number;
                        };
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/cars/all": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            success: boolean;
                            message: string;
                            responseObject?: {
                                /**
                                 * Format: uuid
                                 * @description UUID of the car
                                 */
                                id: string;
                                /**
                                 * @description Car registration number
                                 * @example ABC123
                                 */
                                carNumber: string;
                                /**
                                 * @description Car make
                                 * @example RENAULT TRUCKS
                                 */
                                make?: string;
                                /**
                                 * @description Car model
                                 * @example MASTER 35 LWB (L3H1)
                                 */
                                model?: string;
                                /**
                                 * @description Engine size
                                 * @example 2.3D
                                 */
                                engineSize?: string;
                                /**
                                 * @description Manufacture date
                                 * @example 03/2021
                                 */
                                dateOfManufacture?: string;
                                /**
                                 * @description TecDoc K Type
                                 * @example 58903
                                 */
                                tecDocKType?: string;
                                /**
                                 * @description Vehicle Identification Number
                                 * @example VF6VF000466403384
                                 */
                                vin?: string;
                                /**
                                 * Format: uuid
                                 * @description UUID of the car owner
                                 */
                                ownerId: string;
                                /** @description Complete vehicle data from UKVD API */
                                vehicleData?: unknown;
                                /** @description Whether the vehicle is electric */
                                isElectricVehicle?: boolean;
                                /**
                                 * @description Body style of the vehicle
                                 * @example Hatchback
                                 */
                                bodyStyle?: string;
                                /**
                                 * @description Fuel type
                                 * @example PETROL
                                 */
                                fuelType?: string;
                                /**
                                 * @description Transmission type
                                 * @example Manual
                                 */
                                transmission?: string;
                                /**
                                 * @description Vehicle color
                                 * @example GREY
                                 */
                                colour?: string;
                                /**
                                 * @description Number of doors
                                 * @example 5
                                 */
                                numberOfDoors?: number;
                                /**
                                 * @description Number of seats
                                 * @example 5
                                 */
                                numberOfSeats?: number;
                                /**
                                 * @description CO2 emissions in g/km
                                 * @example 139
                                 */
                                co2Emissions?: number;
                                /**
                                 * @description Engine power in BHP
                                 * @example 64.4
                                 */
                                enginePowerBhp?: number;
                                /**
                                 * @description Date first registered
                                 * @example 2007-04-27
                                 */
                                firstRegistered?: string;
                                /**
                                 * @description Cylinder capacity in cc
                                 * @example 1242
                                 */
                                cylinderCapacity?: number;
                                /**
                                 * @description Number of previous keepers
                                 * @example 8
                                 */
                                numberOfPreviousKeepers?: number;
                                /** @description Detailed technical specifications */
                                technicalDetails?: {
                                    dimensions?: {
                                        unladenWeight?: number | null;
                                        rigidArtic?: string | null;
                                        bodyShape?: string | null;
                                        height?: number | null;
                                        numberOfDoors?: number | null;
                                        numberOfSeats?: number | null;
                                        kerbWeight?: number | null;
                                        fuelTankCapacity?: number | null;
                                        wheelBase?: number | null;
                                        carLength?: number | null;
                                        width?: number | null;
                                        numberOfAxles?: number | null;
                                        grossVehicleWeight?: number | null;
                                        grossCombinedWeight?: number | null;
                                    } | null;
                                    engine?: {
                                        fuelCatalyst?: string | null;
                                        stroke?: number | null;
                                        valvesPerCylinder?: number | null;
                                        aspiration?: string | null;
                                        fuelSystem?: string | null;
                                        numberOfCylinders?: number | null;
                                        cylinderArrangement?: string | null;
                                        valveGear?: string | null;
                                        location?: string | null;
                                        description?: string | null;
                                        bore?: number | null;
                                        make?: string | null;
                                    } | null;
                                    performance?: {
                                        torque?: {
                                            ftLb?: number | null;
                                            nm?: number | null;
                                            rpm?: number | null;
                                        } | null;
                                        power?: {
                                            bhp?: number | null;
                                            rpm?: number | null;
                                            kw?: number | null;
                                        } | null;
                                        maxSpeed?: {
                                            kph?: number | null;
                                            mph?: number | null;
                                        } | null;
                                        co2?: number | null;
                                    } | null;
                                    general?: {
                                        powerDelivery?: string | null;
                                        typeApprovalCategory?: string | null;
                                        seriesDescription?: string | null;
                                        driverPosition?: string | null;
                                        drivingAxle?: string | null;
                                        euroStatus?: string | null;
                                        isLimitedEdition?: boolean | null;
                                    } | null;
                                    consumption?: {
                                        extraUrban?: {
                                            lkm?: number | null;
                                            mpg?: number | null;
                                        } | null;
                                        urbanCold?: {
                                            lkm?: number | null;
                                            mpg?: number | null;
                                        } | null;
                                        combined?: {
                                            lkm?: number | null;
                                            mpg?: number | null;
                                        } | null;
                                    } | null;
                                } | null;
                                /**
                                 * @description Year and month of first registration
                                 * @example 2007-04
                                 */
                                yearMonthFirstRegistered?: string;
                                /**
                                 * @description Number of gears
                                 * @example 5
                                 */
                                gearCount?: number;
                                /**
                                 * @description Wheel plan
                                 * @example 2 AXLE RIGID BODY
                                 */
                                wheelPlan?: string;
                                /**
                                 * @description Vehicle class
                                 * @example Car
                                 */
                                vehicleClass?: string;
                                /**
                                 * @description Engine number
                                 * @example 3707215
                                 */
                                engineNumber?: string;
                                /**
                                 * @description Gross weight in kg
                                 * @example 1590
                                 */
                                grossWeight?: number;
                                /**
                                 * @description Country of origin
                                 * @example Italy
                                 */
                                manufactureCountry?: string;
                                /**
                                 * @description Euro emission standard
                                 * @example 4
                                 */
                                euroEmissionStandard?: string;
                                /**
                                 * @description Combined fuel consumption in MPG
                                 * @example 46.3
                                 */
                                fuelConsumptionMpg?: number;
                                /**
                                 * @description Whether the car has been soft deleted
                                 * @default false
                                 * @example false
                                 */
                                isDeleted: boolean;
                                /** @description List of bookings associated with this car */
                                bookings?: {
                                    /**
                                     * Format: uuid
                                     * @description UUID of the booking
                                     */
                                    id: string;
                                    /**
                                     * @description Booking location
                                     * @example Client's garage
                                     */
                                    location: string;
                                    /**
                                     * @description Total price for the booking
                                     * @example 500
                                     */
                                    totalPrice: number;
                                }[];
                                /**
                                 * Format: date-time
                                 * @description Timestamp of car registration
                                 * @example 2024-01-01T00:00:00.000Z
                                 */
                                createdAt: string;
                            }[];
                            statusCode: number;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/cars": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            success: boolean;
                            message: string;
                            responseObject?: {
                                /**
                                 * Format: uuid
                                 * @description UUID of the car
                                 */
                                id: string;
                                /**
                                 * @description Car registration number
                                 * @example ABC123
                                 */
                                carNumber: string;
                                /**
                                 * @description Car make
                                 * @example RENAULT TRUCKS
                                 */
                                make?: string;
                                /**
                                 * @description Car model
                                 * @example MASTER 35 LWB (L3H1)
                                 */
                                model?: string;
                                /**
                                 * @description Engine size
                                 * @example 2.3D
                                 */
                                engineSize?: string;
                                /**
                                 * @description Manufacture date
                                 * @example 03/2021
                                 */
                                dateOfManufacture?: string;
                                /**
                                 * @description TecDoc K Type
                                 * @example 58903
                                 */
                                tecDocKType?: string;
                                /**
                                 * @description Vehicle Identification Number
                                 * @example VF6VF000466403384
                                 */
                                vin?: string;
                                /**
                                 * Format: uuid
                                 * @description UUID of the car owner
                                 */
                                ownerId: string;
                                /** @description Complete vehicle data from UKVD API */
                                vehicleData?: unknown;
                                /** @description Whether the vehicle is electric */
                                isElectricVehicle?: boolean;
                                /**
                                 * @description Body style of the vehicle
                                 * @example Hatchback
                                 */
                                bodyStyle?: string;
                                /**
                                 * @description Fuel type
                                 * @example PETROL
                                 */
                                fuelType?: string;
                                /**
                                 * @description Transmission type
                                 * @example Manual
                                 */
                                transmission?: string;
                                /**
                                 * @description Vehicle color
                                 * @example GREY
                                 */
                                colour?: string;
                                /**
                                 * @description Number of doors
                                 * @example 5
                                 */
                                numberOfDoors?: number;
                                /**
                                 * @description Number of seats
                                 * @example 5
                                 */
                                numberOfSeats?: number;
                                /**
                                 * @description CO2 emissions in g/km
                                 * @example 139
                                 */
                                co2Emissions?: number;
                                /**
                                 * @description Engine power in BHP
                                 * @example 64.4
                                 */
                                enginePowerBhp?: number;
                                /**
                                 * @description Date first registered
                                 * @example 2007-04-27
                                 */
                                firstRegistered?: string;
                                /**
                                 * @description Cylinder capacity in cc
                                 * @example 1242
                                 */
                                cylinderCapacity?: number;
                                /**
                                 * @description Number of previous keepers
                                 * @example 8
                                 */
                                numberOfPreviousKeepers?: number;
                                /** @description Detailed technical specifications */
                                technicalDetails?: {
                                    dimensions?: {
                                        unladenWeight?: number | null;
                                        rigidArtic?: string | null;
                                        bodyShape?: string | null;
                                        height?: number | null;
                                        numberOfDoors?: number | null;
                                        numberOfSeats?: number | null;
                                        kerbWeight?: number | null;
                                        fuelTankCapacity?: number | null;
                                        wheelBase?: number | null;
                                        carLength?: number | null;
                                        width?: number | null;
                                        numberOfAxles?: number | null;
                                        grossVehicleWeight?: number | null;
                                        grossCombinedWeight?: number | null;
                                    } | null;
                                    engine?: {
                                        fuelCatalyst?: string | null;
                                        stroke?: number | null;
                                        valvesPerCylinder?: number | null;
                                        aspiration?: string | null;
                                        fuelSystem?: string | null;
                                        numberOfCylinders?: number | null;
                                        cylinderArrangement?: string | null;
                                        valveGear?: string | null;
                                        location?: string | null;
                                        description?: string | null;
                                        bore?: number | null;
                                        make?: string | null;
                                    } | null;
                                    performance?: {
                                        torque?: {
                                            ftLb?: number | null;
                                            nm?: number | null;
                                            rpm?: number | null;
                                        } | null;
                                        power?: {
                                            bhp?: number | null;
                                            rpm?: number | null;
                                            kw?: number | null;
                                        } | null;
                                        maxSpeed?: {
                                            kph?: number | null;
                                            mph?: number | null;
                                        } | null;
                                        co2?: number | null;
                                    } | null;
                                    general?: {
                                        powerDelivery?: string | null;
                                        typeApprovalCategory?: string | null;
                                        seriesDescription?: string | null;
                                        driverPosition?: string | null;
                                        drivingAxle?: string | null;
                                        euroStatus?: string | null;
                                        isLimitedEdition?: boolean | null;
                                    } | null;
                                    consumption?: {
                                        extraUrban?: {
                                            lkm?: number | null;
                                            mpg?: number | null;
                                        } | null;
                                        urbanCold?: {
                                            lkm?: number | null;
                                            mpg?: number | null;
                                        } | null;
                                        combined?: {
                                            lkm?: number | null;
                                            mpg?: number | null;
                                        } | null;
                                    } | null;
                                } | null;
                                /**
                                 * @description Year and month of first registration
                                 * @example 2007-04
                                 */
                                yearMonthFirstRegistered?: string;
                                /**
                                 * @description Number of gears
                                 * @example 5
                                 */
                                gearCount?: number;
                                /**
                                 * @description Wheel plan
                                 * @example 2 AXLE RIGID BODY
                                 */
                                wheelPlan?: string;
                                /**
                                 * @description Vehicle class
                                 * @example Car
                                 */
                                vehicleClass?: string;
                                /**
                                 * @description Engine number
                                 * @example 3707215
                                 */
                                engineNumber?: string;
                                /**
                                 * @description Gross weight in kg
                                 * @example 1590
                                 */
                                grossWeight?: number;
                                /**
                                 * @description Country of origin
                                 * @example Italy
                                 */
                                manufactureCountry?: string;
                                /**
                                 * @description Euro emission standard
                                 * @example 4
                                 */
                                euroEmissionStandard?: string;
                                /**
                                 * @description Combined fuel consumption in MPG
                                 * @example 46.3
                                 */
                                fuelConsumptionMpg?: number;
                                /**
                                 * @description Whether the car has been soft deleted
                                 * @default false
                                 * @example false
                                 */
                                isDeleted: boolean;
                                /** @description List of bookings associated with this car */
                                bookings?: {
                                    /**
                                     * Format: uuid
                                     * @description UUID of the booking
                                     */
                                    id: string;
                                    /**
                                     * @description Booking location
                                     * @example Client's garage
                                     */
                                    location: string;
                                    /**
                                     * @description Total price for the booking
                                     * @example 500
                                     */
                                    totalPrice: number;
                                }[];
                                /**
                                 * Format: date-time
                                 * @description Timestamp of car registration
                                 * @example 2024-01-01T00:00:00.000Z
                                 */
                                createdAt: string;
                            }[];
                            statusCode: number;
                        };
                    };
                };
            };
        };
        put?: never;
        /**
         * Add a new car manually
         * @description Add a new car with manually provided details
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        carNumber: string;
                        make?: string;
                        model?: string;
                        engineSize?: string;
                        dateOfManufacture?: string;
                        tecDocKType?: string;
                        vin?: string;
                    };
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            success: boolean;
                            message: string;
                            responseObject?: {
                                /**
                                 * Format: uuid
                                 * @description UUID of the car
                                 */
                                id: string;
                                /**
                                 * @description Car registration number
                                 * @example ABC123
                                 */
                                carNumber: string;
                                /**
                                 * @description Car make
                                 * @example RENAULT TRUCKS
                                 */
                                make?: string;
                                /**
                                 * @description Car model
                                 * @example MASTER 35 LWB (L3H1)
                                 */
                                model?: string;
                                /**
                                 * @description Engine size
                                 * @example 2.3D
                                 */
                                engineSize?: string;
                                /**
                                 * @description Manufacture date
                                 * @example 03/2021
                                 */
                                dateOfManufacture?: string;
                                /**
                                 * @description TecDoc K Type
                                 * @example 58903
                                 */
                                tecDocKType?: string;
                                /**
                                 * @description Vehicle Identification Number
                                 * @example VF6VF000466403384
                                 */
                                vin?: string;
                                /**
                                 * Format: uuid
                                 * @description UUID of the car owner
                                 */
                                ownerId: string;
                                /** @description Complete vehicle data from UKVD API */
                                vehicleData?: unknown;
                                /** @description Whether the vehicle is electric */
                                isElectricVehicle?: boolean;
                                /**
                                 * @description Body style of the vehicle
                                 * @example Hatchback
                                 */
                                bodyStyle?: string;
                                /**
                                 * @description Fuel type
                                 * @example PETROL
                                 */
                                fuelType?: string;
                                /**
                                 * @description Transmission type
                                 * @example Manual
                                 */
                                transmission?: string;
                                /**
                                 * @description Vehicle color
                                 * @example GREY
                                 */
                                colour?: string;
                                /**
                                 * @description Number of doors
                                 * @example 5
                                 */
                                numberOfDoors?: number;
                                /**
                                 * @description Number of seats
                                 * @example 5
                                 */
                                numberOfSeats?: number;
                                /**
                                 * @description CO2 emissions in g/km
                                 * @example 139
                                 */
                                co2Emissions?: number;
                                /**
                                 * @description Engine power in BHP
                                 * @example 64.4
                                 */
                                enginePowerBhp?: number;
                                /**
                                 * @description Date first registered
                                 * @example 2007-04-27
                                 */
                                firstRegistered?: string;
                                /**
                                 * @description Cylinder capacity in cc
                                 * @example 1242
                                 */
                                cylinderCapacity?: number;
                                /**
                                 * @description Number of previous keepers
                                 * @example 8
                                 */
                                numberOfPreviousKeepers?: number;
                                /** @description Detailed technical specifications */
                                technicalDetails?: {
                                    dimensions?: {
                                        unladenWeight?: number | null;
                                        rigidArtic?: string | null;
                                        bodyShape?: string | null;
                                        height?: number | null;
                                        numberOfDoors?: number | null;
                                        numberOfSeats?: number | null;
                                        kerbWeight?: number | null;
                                        fuelTankCapacity?: number | null;
                                        wheelBase?: number | null;
                                        carLength?: number | null;
                                        width?: number | null;
                                        numberOfAxles?: number | null;
                                        grossVehicleWeight?: number | null;
                                        grossCombinedWeight?: number | null;
                                    } | null;
                                    engine?: {
                                        fuelCatalyst?: string | null;
                                        stroke?: number | null;
                                        valvesPerCylinder?: number | null;
                                        aspiration?: string | null;
                                        fuelSystem?: string | null;
                                        numberOfCylinders?: number | null;
                                        cylinderArrangement?: string | null;
                                        valveGear?: string | null;
                                        location?: string | null;
                                        description?: string | null;
                                        bore?: number | null;
                                        make?: string | null;
                                    } | null;
                                    performance?: {
                                        torque?: {
                                            ftLb?: number | null;
                                            nm?: number | null;
                                            rpm?: number | null;
                                        } | null;
                                        power?: {
                                            bhp?: number | null;
                                            rpm?: number | null;
                                            kw?: number | null;
                                        } | null;
                                        maxSpeed?: {
                                            kph?: number | null;
                                            mph?: number | null;
                                        } | null;
                                        co2?: number | null;
                                    } | null;
                                    general?: {
                                        powerDelivery?: string | null;
                                        typeApprovalCategory?: string | null;
                                        seriesDescription?: string | null;
                                        driverPosition?: string | null;
                                        drivingAxle?: string | null;
                                        euroStatus?: string | null;
                                        isLimitedEdition?: boolean | null;
                                    } | null;
                                    consumption?: {
                                        extraUrban?: {
                                            lkm?: number | null;
                                            mpg?: number | null;
                                        } | null;
                                        urbanCold?: {
                                            lkm?: number | null;
                                            mpg?: number | null;
                                        } | null;
                                        combined?: {
                                            lkm?: number | null;
                                            mpg?: number | null;
                                        } | null;
                                    } | null;
                                } | null;
                                /**
                                 * @description Year and month of first registration
                                 * @example 2007-04
                                 */
                                yearMonthFirstRegistered?: string;
                                /**
                                 * @description Number of gears
                                 * @example 5
                                 */
                                gearCount?: number;
                                /**
                                 * @description Wheel plan
                                 * @example 2 AXLE RIGID BODY
                                 */
                                wheelPlan?: string;
                                /**
                                 * @description Vehicle class
                                 * @example Car
                                 */
                                vehicleClass?: string;
                                /**
                                 * @description Engine number
                                 * @example 3707215
                                 */
                                engineNumber?: string;
                                /**
                                 * @description Gross weight in kg
                                 * @example 1590
                                 */
                                grossWeight?: number;
                                /**
                                 * @description Country of origin
                                 * @example Italy
                                 */
                                manufactureCountry?: string;
                                /**
                                 * @description Euro emission standard
                                 * @example 4
                                 */
                                euroEmissionStandard?: string;
                                /**
                                 * @description Combined fuel consumption in MPG
                                 * @example 46.3
                                 */
                                fuelConsumptionMpg?: number;
                                /**
                                 * @description Whether the car has been soft deleted
                                 * @default false
                                 * @example false
                                 */
                                isDeleted: boolean;
                                /** @description List of bookings associated with this car */
                                bookings?: {
                                    /**
                                     * Format: uuid
                                     * @description UUID of the booking
                                     */
                                    id: string;
                                    /**
                                     * @description Booking location
                                     * @example Client's garage
                                     */
                                    location: string;
                                    /**
                                     * @description Total price for the booking
                                     * @example 500
                                     */
                                    totalPrice: number;
                                }[];
                                /**
                                 * Format: date-time
                                 * @description Timestamp of car registration
                                 * @example 2024-01-01T00:00:00.000Z
                                 */
                                createdAt: string;
                            };
                            statusCode: number;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/cars/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            success: boolean;
                            message: string;
                            responseObject?: {
                                /**
                                 * Format: uuid
                                 * @description UUID of the car
                                 */
                                id: string;
                                /**
                                 * @description Car registration number
                                 * @example ABC123
                                 */
                                carNumber: string;
                                /**
                                 * @description Car make
                                 * @example RENAULT TRUCKS
                                 */
                                make?: string;
                                /**
                                 * @description Car model
                                 * @example MASTER 35 LWB (L3H1)
                                 */
                                model?: string;
                                /**
                                 * @description Engine size
                                 * @example 2.3D
                                 */
                                engineSize?: string;
                                /**
                                 * @description Manufacture date
                                 * @example 03/2021
                                 */
                                dateOfManufacture?: string;
                                /**
                                 * @description TecDoc K Type
                                 * @example 58903
                                 */
                                tecDocKType?: string;
                                /**
                                 * @description Vehicle Identification Number
                                 * @example VF6VF000466403384
                                 */
                                vin?: string;
                                /**
                                 * Format: uuid
                                 * @description UUID of the car owner
                                 */
                                ownerId: string;
                                /** @description Complete vehicle data from UKVD API */
                                vehicleData?: unknown;
                                /** @description Whether the vehicle is electric */
                                isElectricVehicle?: boolean;
                                /**
                                 * @description Body style of the vehicle
                                 * @example Hatchback
                                 */
                                bodyStyle?: string;
                                /**
                                 * @description Fuel type
                                 * @example PETROL
                                 */
                                fuelType?: string;
                                /**
                                 * @description Transmission type
                                 * @example Manual
                                 */
                                transmission?: string;
                                /**
                                 * @description Vehicle color
                                 * @example GREY
                                 */
                                colour?: string;
                                /**
                                 * @description Number of doors
                                 * @example 5
                                 */
                                numberOfDoors?: number;
                                /**
                                 * @description Number of seats
                                 * @example 5
                                 */
                                numberOfSeats?: number;
                                /**
                                 * @description CO2 emissions in g/km
                                 * @example 139
                                 */
                                co2Emissions?: number;
                                /**
                                 * @description Engine power in BHP
                                 * @example 64.4
                                 */
                                enginePowerBhp?: number;
                                /**
                                 * @description Date first registered
                                 * @example 2007-04-27
                                 */
                                firstRegistered?: string;
                                /**
                                 * @description Cylinder capacity in cc
                                 * @example 1242
                                 */
                                cylinderCapacity?: number;
                                /**
                                 * @description Number of previous keepers
                                 * @example 8
                                 */
                                numberOfPreviousKeepers?: number;
                                /** @description Detailed technical specifications */
                                technicalDetails?: {
                                    dimensions?: {
                                        unladenWeight?: number | null;
                                        rigidArtic?: string | null;
                                        bodyShape?: string | null;
                                        height?: number | null;
                                        numberOfDoors?: number | null;
                                        numberOfSeats?: number | null;
                                        kerbWeight?: number | null;
                                        fuelTankCapacity?: number | null;
                                        wheelBase?: number | null;
                                        carLength?: number | null;
                                        width?: number | null;
                                        numberOfAxles?: number | null;
                                        grossVehicleWeight?: number | null;
                                        grossCombinedWeight?: number | null;
                                    } | null;
                                    engine?: {
                                        fuelCatalyst?: string | null;
                                        stroke?: number | null;
                                        valvesPerCylinder?: number | null;
                                        aspiration?: string | null;
                                        fuelSystem?: string | null;
                                        numberOfCylinders?: number | null;
                                        cylinderArrangement?: string | null;
                                        valveGear?: string | null;
                                        location?: string | null;
                                        description?: string | null;
                                        bore?: number | null;
                                        make?: string | null;
                                    } | null;
                                    performance?: {
                                        torque?: {
                                            ftLb?: number | null;
                                            nm?: number | null;
                                            rpm?: number | null;
                                        } | null;
                                        power?: {
                                            bhp?: number | null;
                                            rpm?: number | null;
                                            kw?: number | null;
                                        } | null;
                                        maxSpeed?: {
                                            kph?: number | null;
                                            mph?: number | null;
                                        } | null;
                                        co2?: number | null;
                                    } | null;
                                    general?: {
                                        powerDelivery?: string | null;
                                        typeApprovalCategory?: string | null;
                                        seriesDescription?: string | null;
                                        driverPosition?: string | null;
                                        drivingAxle?: string | null;
                                        euroStatus?: string | null;
                                        isLimitedEdition?: boolean | null;
                                    } | null;
                                    consumption?: {
                                        extraUrban?: {
                                            lkm?: number | null;
                                            mpg?: number | null;
                                        } | null;
                                        urbanCold?: {
                                            lkm?: number | null;
                                            mpg?: number | null;
                                        } | null;
                                        combined?: {
                                            lkm?: number | null;
                                            mpg?: number | null;
                                        } | null;
                                    } | null;
                                } | null;
                                /**
                                 * @description Year and month of first registration
                                 * @example 2007-04
                                 */
                                yearMonthFirstRegistered?: string;
                                /**
                                 * @description Number of gears
                                 * @example 5
                                 */
                                gearCount?: number;
                                /**
                                 * @description Wheel plan
                                 * @example 2 AXLE RIGID BODY
                                 */
                                wheelPlan?: string;
                                /**
                                 * @description Vehicle class
                                 * @example Car
                                 */
                                vehicleClass?: string;
                                /**
                                 * @description Engine number
                                 * @example 3707215
                                 */
                                engineNumber?: string;
                                /**
                                 * @description Gross weight in kg
                                 * @example 1590
                                 */
                                grossWeight?: number;
                                /**
                                 * @description Country of origin
                                 * @example Italy
                                 */
                                manufactureCountry?: string;
                                /**
                                 * @description Euro emission standard
                                 * @example 4
                                 */
                                euroEmissionStandard?: string;
                                /**
                                 * @description Combined fuel consumption in MPG
                                 * @example 46.3
                                 */
                                fuelConsumptionMpg?: number;
                                /**
                                 * @description Whether the car has been soft deleted
                                 * @default false
                                 * @example false
                                 */
                                isDeleted: boolean;
                                /** @description List of bookings associated with this car */
                                bookings?: {
                                    /**
                                     * Format: uuid
                                     * @description UUID of the booking
                                     */
                                    id: string;
                                    /**
                                     * @description Booking location
                                     * @example Client's garage
                                     */
                                    location: string;
                                    /**
                                     * @description Total price for the booking
                                     * @example 500
                                     */
                                    totalPrice: number;
                                }[];
                                /**
                                 * Format: date-time
                                 * @description Timestamp of car registration
                                 * @example 2024-01-01T00:00:00.000Z
                                 */
                                createdAt: string;
                            };
                            statusCode: number;
                        };
                    };
                };
            };
        };
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        carNumber?: string;
                        make?: string;
                        model?: string;
                        engineSize?: string;
                        dateOfManufacture?: string;
                        tecDocKType?: string;
                        vin?: string;
                    };
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            success: boolean;
                            message: string;
                            responseObject?: {
                                /**
                                 * Format: uuid
                                 * @description UUID of the car
                                 */
                                id: string;
                                /**
                                 * @description Car registration number
                                 * @example ABC123
                                 */
                                carNumber: string;
                                /**
                                 * @description Car make
                                 * @example RENAULT TRUCKS
                                 */
                                make?: string;
                                /**
                                 * @description Car model
                                 * @example MASTER 35 LWB (L3H1)
                                 */
                                model?: string;
                                /**
                                 * @description Engine size
                                 * @example 2.3D
                                 */
                                engineSize?: string;
                                /**
                                 * @description Manufacture date
                                 * @example 03/2021
                                 */
                                dateOfManufacture?: string;
                                /**
                                 * @description TecDoc K Type
                                 * @example 58903
                                 */
                                tecDocKType?: string;
                                /**
                                 * @description Vehicle Identification Number
                                 * @example VF6VF000466403384
                                 */
                                vin?: string;
                                /**
                                 * Format: uuid
                                 * @description UUID of the car owner
                                 */
                                ownerId: string;
                                /** @description Complete vehicle data from UKVD API */
                                vehicleData?: unknown;
                                /** @description Whether the vehicle is electric */
                                isElectricVehicle?: boolean;
                                /**
                                 * @description Body style of the vehicle
                                 * @example Hatchback
                                 */
                                bodyStyle?: string;
                                /**
                                 * @description Fuel type
                                 * @example PETROL
                                 */
                                fuelType?: string;
                                /**
                                 * @description Transmission type
                                 * @example Manual
                                 */
                                transmission?: string;
                                /**
                                 * @description Vehicle color
                                 * @example GREY
                                 */
                                colour?: string;
                                /**
                                 * @description Number of doors
                                 * @example 5
                                 */
                                numberOfDoors?: number;
                                /**
                                 * @description Number of seats
                                 * @example 5
                                 */
                                numberOfSeats?: number;
                                /**
                                 * @description CO2 emissions in g/km
                                 * @example 139
                                 */
                                co2Emissions?: number;
                                /**
                                 * @description Engine power in BHP
                                 * @example 64.4
                                 */
                                enginePowerBhp?: number;
                                /**
                                 * @description Date first registered
                                 * @example 2007-04-27
                                 */
                                firstRegistered?: string;
                                /**
                                 * @description Cylinder capacity in cc
                                 * @example 1242
                                 */
                                cylinderCapacity?: number;
                                /**
                                 * @description Number of previous keepers
                                 * @example 8
                                 */
                                numberOfPreviousKeepers?: number;
                                /** @description Detailed technical specifications */
                                technicalDetails?: {
                                    dimensions?: {
                                        unladenWeight?: number | null;
                                        rigidArtic?: string | null;
                                        bodyShape?: string | null;
                                        height?: number | null;
                                        numberOfDoors?: number | null;
                                        numberOfSeats?: number | null;
                                        kerbWeight?: number | null;
                                        fuelTankCapacity?: number | null;
                                        wheelBase?: number | null;
                                        carLength?: number | null;
                                        width?: number | null;
                                        numberOfAxles?: number | null;
                                        grossVehicleWeight?: number | null;
                                        grossCombinedWeight?: number | null;
                                    } | null;
                                    engine?: {
                                        fuelCatalyst?: string | null;
                                        stroke?: number | null;
                                        valvesPerCylinder?: number | null;
                                        aspiration?: string | null;
                                        fuelSystem?: string | null;
                                        numberOfCylinders?: number | null;
                                        cylinderArrangement?: string | null;
                                        valveGear?: string | null;
                                        location?: string | null;
                                        description?: string | null;
                                        bore?: number | null;
                                        make?: string | null;
                                    } | null;
                                    performance?: {
                                        torque?: {
                                            ftLb?: number | null;
                                            nm?: number | null;
                                            rpm?: number | null;
                                        } | null;
                                        power?: {
                                            bhp?: number | null;
                                            rpm?: number | null;
                                            kw?: number | null;
                                        } | null;
                                        maxSpeed?: {
                                            kph?: number | null;
                                            mph?: number | null;
                                        } | null;
                                        co2?: number | null;
                                    } | null;
                                    general?: {
                                        powerDelivery?: string | null;
                                        typeApprovalCategory?: string | null;
                                        seriesDescription?: string | null;
                                        driverPosition?: string | null;
                                        drivingAxle?: string | null;
                                        euroStatus?: string | null;
                                        isLimitedEdition?: boolean | null;
                                    } | null;
                                    consumption?: {
                                        extraUrban?: {
                                            lkm?: number | null;
                                            mpg?: number | null;
                                        } | null;
                                        urbanCold?: {
                                            lkm?: number | null;
                                            mpg?: number | null;
                                        } | null;
                                        combined?: {
                                            lkm?: number | null;
                                            mpg?: number | null;
                                        } | null;
                                    } | null;
                                } | null;
                                /**
                                 * @description Year and month of first registration
                                 * @example 2007-04
                                 */
                                yearMonthFirstRegistered?: string;
                                /**
                                 * @description Number of gears
                                 * @example 5
                                 */
                                gearCount?: number;
                                /**
                                 * @description Wheel plan
                                 * @example 2 AXLE RIGID BODY
                                 */
                                wheelPlan?: string;
                                /**
                                 * @description Vehicle class
                                 * @example Car
                                 */
                                vehicleClass?: string;
                                /**
                                 * @description Engine number
                                 * @example 3707215
                                 */
                                engineNumber?: string;
                                /**
                                 * @description Gross weight in kg
                                 * @example 1590
                                 */
                                grossWeight?: number;
                                /**
                                 * @description Country of origin
                                 * @example Italy
                                 */
                                manufactureCountry?: string;
                                /**
                                 * @description Euro emission standard
                                 * @example 4
                                 */
                                euroEmissionStandard?: string;
                                /**
                                 * @description Combined fuel consumption in MPG
                                 * @example 46.3
                                 */
                                fuelConsumptionMpg?: number;
                                /**
                                 * @description Whether the car has been soft deleted
                                 * @default false
                                 * @example false
                                 */
                                isDeleted: boolean;
                                /** @description List of bookings associated with this car */
                                bookings?: {
                                    /**
                                     * Format: uuid
                                     * @description UUID of the booking
                                     */
                                    id: string;
                                    /**
                                     * @description Booking location
                                     * @example Client's garage
                                     */
                                    location: string;
                                    /**
                                     * @description Total price for the booking
                                     * @example 500
                                     */
                                    totalPrice: number;
                                }[];
                                /**
                                 * Format: date-time
                                 * @description Timestamp of car registration
                                 * @example 2024-01-01T00:00:00.000Z
                                 */
                                createdAt: string;
                            };
                            statusCode: number;
                        };
                    };
                };
            };
        };
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            success: boolean;
                            message: string;
                            responseObject?: {
                                success: boolean;
                            };
                            statusCode: number;
                        };
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/cars/ukvd": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Add a car using UK Vehicle Data API
         * @description Fetches detailed vehicle data from the UK Vehicle Data API and adds the car to the database
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        /**
                         * @description Vehicle Registration Mark (license plate)
                         * @example AK07SJY
                         */
                        vrm: string;
                    };
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            success: boolean;
                            message: string;
                            responseObject?: {
                                /**
                                 * Format: uuid
                                 * @description UUID of the car
                                 */
                                id: string;
                                /**
                                 * @description Car registration number
                                 * @example ABC123
                                 */
                                carNumber: string;
                                /**
                                 * @description Car make
                                 * @example RENAULT TRUCKS
                                 */
                                make?: string;
                                /**
                                 * @description Car model
                                 * @example MASTER 35 LWB (L3H1)
                                 */
                                model?: string;
                                /**
                                 * @description Engine size
                                 * @example 2.3D
                                 */
                                engineSize?: string;
                                /**
                                 * @description Manufacture date
                                 * @example 03/2021
                                 */
                                dateOfManufacture?: string;
                                /**
                                 * @description TecDoc K Type
                                 * @example 58903
                                 */
                                tecDocKType?: string;
                                /**
                                 * @description Vehicle Identification Number
                                 * @example VF6VF000466403384
                                 */
                                vin?: string;
                                /**
                                 * Format: uuid
                                 * @description UUID of the car owner
                                 */
                                ownerId: string;
                                /** @description Complete vehicle data from UKVD API */
                                vehicleData?: unknown;
                                /** @description Whether the vehicle is electric */
                                isElectricVehicle?: boolean;
                                /**
                                 * @description Body style of the vehicle
                                 * @example Hatchback
                                 */
                                bodyStyle?: string;
                                /**
                                 * @description Fuel type
                                 * @example PETROL
                                 */
                                fuelType?: string;
                                /**
                                 * @description Transmission type
                                 * @example Manual
                                 */
                                transmission?: string;
                                /**
                                 * @description Vehicle color
                                 * @example GREY
                                 */
                                colour?: string;
                                /**
                                 * @description Number of doors
                                 * @example 5
                                 */
                                numberOfDoors?: number;
                                /**
                                 * @description Number of seats
                                 * @example 5
                                 */
                                numberOfSeats?: number;
                                /**
                                 * @description CO2 emissions in g/km
                                 * @example 139
                                 */
                                co2Emissions?: number;
                                /**
                                 * @description Engine power in BHP
                                 * @example 64.4
                                 */
                                enginePowerBhp?: number;
                                /**
                                 * @description Date first registered
                                 * @example 2007-04-27
                                 */
                                firstRegistered?: string;
                                /**
                                 * @description Cylinder capacity in cc
                                 * @example 1242
                                 */
                                cylinderCapacity?: number;
                                /**
                                 * @description Number of previous keepers
                                 * @example 8
                                 */
                                numberOfPreviousKeepers?: number;
                                /** @description Detailed technical specifications */
                                technicalDetails?: {
                                    dimensions?: {
                                        unladenWeight?: number | null;
                                        rigidArtic?: string | null;
                                        bodyShape?: string | null;
                                        height?: number | null;
                                        numberOfDoors?: number | null;
                                        numberOfSeats?: number | null;
                                        kerbWeight?: number | null;
                                        fuelTankCapacity?: number | null;
                                        wheelBase?: number | null;
                                        carLength?: number | null;
                                        width?: number | null;
                                        numberOfAxles?: number | null;
                                        grossVehicleWeight?: number | null;
                                        grossCombinedWeight?: number | null;
                                    } | null;
                                    engine?: {
                                        fuelCatalyst?: string | null;
                                        stroke?: number | null;
                                        valvesPerCylinder?: number | null;
                                        aspiration?: string | null;
                                        fuelSystem?: string | null;
                                        numberOfCylinders?: number | null;
                                        cylinderArrangement?: string | null;
                                        valveGear?: string | null;
                                        location?: string | null;
                                        description?: string | null;
                                        bore?: number | null;
                                        make?: string | null;
                                    } | null;
                                    performance?: {
                                        torque?: {
                                            ftLb?: number | null;
                                            nm?: number | null;
                                            rpm?: number | null;
                                        } | null;
                                        power?: {
                                            bhp?: number | null;
                                            rpm?: number | null;
                                            kw?: number | null;
                                        } | null;
                                        maxSpeed?: {
                                            kph?: number | null;
                                            mph?: number | null;
                                        } | null;
                                        co2?: number | null;
                                    } | null;
                                    general?: {
                                        powerDelivery?: string | null;
                                        typeApprovalCategory?: string | null;
                                        seriesDescription?: string | null;
                                        driverPosition?: string | null;
                                        drivingAxle?: string | null;
                                        euroStatus?: string | null;
                                        isLimitedEdition?: boolean | null;
                                    } | null;
                                    consumption?: {
                                        extraUrban?: {
                                            lkm?: number | null;
                                            mpg?: number | null;
                                        } | null;
                                        urbanCold?: {
                                            lkm?: number | null;
                                            mpg?: number | null;
                                        } | null;
                                        combined?: {
                                            lkm?: number | null;
                                            mpg?: number | null;
                                        } | null;
                                    } | null;
                                } | null;
                                /**
                                 * @description Year and month of first registration
                                 * @example 2007-04
                                 */
                                yearMonthFirstRegistered?: string;
                                /**
                                 * @description Number of gears
                                 * @example 5
                                 */
                                gearCount?: number;
                                /**
                                 * @description Wheel plan
                                 * @example 2 AXLE RIGID BODY
                                 */
                                wheelPlan?: string;
                                /**
                                 * @description Vehicle class
                                 * @example Car
                                 */
                                vehicleClass?: string;
                                /**
                                 * @description Engine number
                                 * @example 3707215
                                 */
                                engineNumber?: string;
                                /**
                                 * @description Gross weight in kg
                                 * @example 1590
                                 */
                                grossWeight?: number;
                                /**
                                 * @description Country of origin
                                 * @example Italy
                                 */
                                manufactureCountry?: string;
                                /**
                                 * @description Euro emission standard
                                 * @example 4
                                 */
                                euroEmissionStandard?: string;
                                /**
                                 * @description Combined fuel consumption in MPG
                                 * @example 46.3
                                 */
                                fuelConsumptionMpg?: number;
                                /**
                                 * @description Whether the car has been soft deleted
                                 * @default false
                                 * @example false
                                 */
                                isDeleted: boolean;
                                /** @description List of bookings associated with this car */
                                bookings?: {
                                    /**
                                     * Format: uuid
                                     * @description UUID of the booking
                                     */
                                    id: string;
                                    /**
                                     * @description Booking location
                                     * @example Client's garage
                                     */
                                    location: string;
                                    /**
                                     * @description Total price for the booking
                                     * @example 500
                                     */
                                    totalPrice: number;
                                }[];
                                /**
                                 * Format: date-time
                                 * @description Timestamp of car registration
                                 * @example 2024-01-01T00:00:00.000Z
                                 */
                                createdAt: string;
                            };
                            statusCode: number;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/pay": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        /** @description id of booking */
                        id?: string;
                        /** @description redirect url */
                        redirectUrl?: string;
                    };
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            success: boolean;
                            message: string;
                            responseObject?: Record<string, never>;
                            statusCode: number;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/pay/hook": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        /** @description id of booking */
                        id?: string;
                    };
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            success: boolean;
                            message: string;
                            responseObject?: Record<string, never>;
                            statusCode: number;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/admin/users": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            success: boolean;
                            message: string;
                            responseObject?: {
                                /**
                                 * Format: uuid
                                 * @description UUID of the user
                                 */
                                id: string;
                                /** @example John */
                                firstName: string;
                                /** @example Doe */
                                lastName: string;
                                /** @example password123 */
                                password: string;
                                /**
                                 * Format: email
                                 * @example john.doe@example.com
                                 */
                                email: string;
                                /** @example +123456789 */
                                phone?: string;
                                /** @example 12345 */
                                zipCode?: string;
                                /**
                                 * @description Role of the user (client, mechanic, admin)
                                 * @example client
                                 * @enum {string}
                                 */
                                role: "client" | "mechanic" | "admin";
                                /** @example acct_123ABC */
                                stripeAccountId?: string;
                                /**
                                 * @default false
                                 * @example false
                                 */
                                isVerified: boolean;
                                /**
                                 * Format: date-time
                                 * @description Timestamp of account creation
                                 * @example 2024-01-01T00:00:00.000Z
                                 */
                                createdAt: string;
                                /**
                                 * Format: date-time
                                 * @description Timestamp of account update
                                 * @example 2024-01-01T00:00:00.000Z
                                 */
                                updatedAt: string;
                            }[];
                            statusCode: number;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/admin/users/mechanics": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            success: boolean;
                            message: string;
                            responseObject?: {
                                /**
                                 * Format: uuid
                                 * @description UUID of the user
                                 */
                                id: string;
                                /** @example John */
                                firstName: string;
                                /** @example Doe */
                                lastName: string;
                                /** @example password123 */
                                password: string;
                                /**
                                 * Format: email
                                 * @example john.doe@example.com
                                 */
                                email: string;
                                /** @example +123456789 */
                                phone?: string;
                                /** @example 12345 */
                                zipCode?: string;
                                /**
                                 * @description Role of the user (client, mechanic, admin)
                                 * @example client
                                 * @enum {string}
                                 */
                                role: "client" | "mechanic" | "admin";
                                /** @example acct_123ABC */
                                stripeAccountId?: string;
                                /**
                                 * @default false
                                 * @example false
                                 */
                                isVerified: boolean;
                                /**
                                 * Format: date-time
                                 * @description Timestamp of account creation
                                 * @example 2024-01-01T00:00:00.000Z
                                 */
                                createdAt: string;
                                /**
                                 * Format: date-time
                                 * @description Timestamp of account update
                                 * @example 2024-01-01T00:00:00.000Z
                                 */
                                updatedAt: string;
                            }[];
                            statusCode: number;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/admin/users/clients": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            success: boolean;
                            message: string;
                            responseObject?: {
                                /**
                                 * Format: uuid
                                 * @description UUID of the user
                                 */
                                id: string;
                                /** @example John */
                                firstName: string;
                                /** @example Doe */
                                lastName: string;
                                /** @example password123 */
                                password: string;
                                /**
                                 * Format: email
                                 * @example john.doe@example.com
                                 */
                                email: string;
                                /** @example +123456789 */
                                phone?: string;
                                /** @example 12345 */
                                zipCode?: string;
                                /**
                                 * @description Role of the user (client, mechanic, admin)
                                 * @example client
                                 * @enum {string}
                                 */
                                role: "client" | "mechanic" | "admin";
                                /** @example acct_123ABC */
                                stripeAccountId?: string;
                                /**
                                 * @default false
                                 * @example false
                                 */
                                isVerified: boolean;
                                /**
                                 * Format: date-time
                                 * @description Timestamp of account creation
                                 * @example 2024-01-01T00:00:00.000Z
                                 */
                                createdAt: string;
                                /**
                                 * Format: date-time
                                 * @description Timestamp of account update
                                 * @example 2024-01-01T00:00:00.000Z
                                 */
                                updatedAt: string;
                            }[];
                            statusCode: number;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        User: {
            /**
             * Format: uuid
             * @description UUID of the user
             */
            id: string;
            /** @example John */
            firstName: string;
            /** @example Doe */
            lastName: string;
            /** @example password123 */
            password: string;
            /**
             * Format: email
             * @example john.doe@example.com
             */
            email: string;
            /** @example +123456789 */
            phone?: string;
            /** @example 12345 */
            zipCode?: string;
            /**
             * @description Role of the user (client, mechanic, admin)
             * @example client
             * @enum {string}
             */
            role: "client" | "mechanic" | "admin";
            /** @example acct_123ABC */
            stripeAccountId?: string;
            /**
             * @default false
             * @example false
             */
            isVerified: boolean;
            /**
             * Format: date-time
             * @description Timestamp of account creation
             * @example 2024-01-01T00:00:00.000Z
             */
            createdAt: string;
            /**
             * Format: date-time
             * @description Timestamp of account update
             * @example 2024-01-01T00:00:00.000Z
             */
            updatedAt: string;
        };
        Booking: {
            /**
             * Format: uuid
             * @description UUID of the booking
             */
            id: string;
            /**
             * @description List of selected jobs
             * @example [
             *       "Oil Change",
             *       "Tire Replacement"
             *     ]
             */
            selectedJobs: string[];
            /**
             * @description Total price for the booking
             * @example 500
             */
            totalPrice: number;
            /** @description List of part items with prices */
            partItemsPrices?: {
                /** Format: uuid */
                id: string;
                price: number;
            }[];
            /**
             * @description Booking status
             * @default pending
             * @example pending
             * @enum {string}
             */
            status: "pending" | "accepted" | "completed" | "open" | "canceled" | "authorized" | "expired" | "failed" | "paid";
            /**
             * Format: uuid
             * @description UUID of the client
             */
            clientId: string;
            /**
             * Format: uuid
             * @description UUID of the mechanic (optional)
             */
            mechanicId?: string;
            /**
             * Format: uuid
             * @description UUID of the car
             */
            carId: string;
            /** @description List of pending jobs associated with this booking */
            pendingJobs?: {
                /**
                 * Format: uuid
                 * @description UUID of the pending job
                 */
                id: string;
                /**
                 * @description Description of the pending job
                 * @example Brake replacement
                 */
                description: string;
                /**
                 * @description Estimated time for the pending job (hours)
                 * @example 3
                 */
                estimatedTime: number;
                /**
                 * @description Estimated cost for the pending job
                 * @example 150
                 */
                estimatedCost: number;
            }[];
            /** @description List of jobs associated with this booking */
            jobs?: {
                /**
                 * Format: uuid
                 * @description UUID of the job
                 */
                id: string;
                /**
                 * @description Name of the job
                 * @example Oil Change
                 */
                jobName: string;
                /**
                 * @description Time required for the job (hours)
                 * @example 2
                 */
                timeRequired: number;
                /**
                 * @description Status of the job
                 * @example pending
                 * @enum {string}
                 */
                status: "pending" | "in_progress" | "completed";
            }[];
            /** @description Location details */
            location?: {
                /**
                 * Format: uuid
                 * @description UUID of the location
                 */
                id: string;
                /**
                 * @description Street address
                 * @example 123 Main St
                 */
                address: string;
                /**
                 * @description City
                 * @example New York
                 */
                city: string;
                /**
                 * @description Postal or ZIP code
                 * @example 10001
                 */
                postalCode: string;
                /**
                 * @description State or Province
                 * @example New York
                 */
                state?: string;
                /**
                 * @description Country
                 * @example USA
                 */
                country: string;
                /**
                 * @description Latitude
                 * @example 40.7128
                 */
                latitude?: number;
                /**
                 * @description Longitude
                 * @example -74.006
                 */
                longitude?: number;
            };
            /** @description List of schedules associated with this booking */
            schedules?: {
                /** Format: uuid */
                id?: string;
                timeInterval: string;
                dates?: string[];
            }[];
            /**
             * Format: date-time
             * @description Timestamp of booking creation
             * @example 2024-01-01T00:00:00.000Z
             */
            createdAt: string;
        };
        Job: {
            /**
             * Format: uuid
             * @description UUID of the job
             */
            id: string;
            /**
             * @description Job name
             * @example Oil Change
             */
            name: string;
            /**
             * @description Time required for the job (in hours)
             * @example 2
             */
            duration: number;
            /**
             * @description Price for the job
             * @example 100
             */
            pricePerHour: number;
            /** @description Search query for the job */
            searchQuery?: string;
            /**
             * @description Quality tier
             * @default gold
             * @example gold
             * @enum {string}
             */
            quality: "gold" | "silver" | "bronze";
            /**
             * Format: uuid
             * @description UUID of the associated booking
             */
            bookingId: string;
            /**
             * Format: date-time
             * @description Timestamp of job creation
             * @example 2024-01-01T00:00:00.000Z
             */
            createdAt: string;
        };
        Car: {
            /**
             * Format: uuid
             * @description UUID of the car
             */
            id: string;
            /**
             * @description Car registration number
             * @example ABC123
             */
            carNumber: string;
            /**
             * @description Car make
             * @example RENAULT TRUCKS
             */
            make?: string;
            /**
             * @description Car model
             * @example MASTER 35 LWB (L3H1)
             */
            model?: string;
            /**
             * @description Engine size
             * @example 2.3D
             */
            engineSize?: string;
            /**
             * @description Manufacture date
             * @example 03/2021
             */
            dateOfManufacture?: string;
            /**
             * @description TecDoc K Type
             * @example 58903
             */
            tecDocKType?: string;
            /**
             * @description Vehicle Identification Number
             * @example VF6VF000466403384
             */
            vin?: string;
            /**
             * Format: uuid
             * @description UUID of the car owner
             */
            ownerId: string;
            /** @description Complete vehicle data from UKVD API */
            vehicleData?: unknown;
            /** @description Whether the vehicle is electric */
            isElectricVehicle?: boolean;
            /**
             * @description Body style of the vehicle
             * @example Hatchback
             */
            bodyStyle?: string;
            /**
             * @description Fuel type
             * @example PETROL
             */
            fuelType?: string;
            /**
             * @description Transmission type
             * @example Manual
             */
            transmission?: string;
            /**
             * @description Vehicle color
             * @example GREY
             */
            colour?: string;
            /**
             * @description Number of doors
             * @example 5
             */
            numberOfDoors?: number;
            /**
             * @description Number of seats
             * @example 5
             */
            numberOfSeats?: number;
            /**
             * @description CO2 emissions in g/km
             * @example 139
             */
            co2Emissions?: number;
            /**
             * @description Engine power in BHP
             * @example 64.4
             */
            enginePowerBhp?: number;
            /**
             * @description Date first registered
             * @example 2007-04-27
             */
            firstRegistered?: string;
            /**
             * @description Cylinder capacity in cc
             * @example 1242
             */
            cylinderCapacity?: number;
            /**
             * @description Number of previous keepers
             * @example 8
             */
            numberOfPreviousKeepers?: number;
            /** @description Detailed technical specifications */
            technicalDetails?: {
                dimensions?: {
                    unladenWeight?: number | null;
                    rigidArtic?: string | null;
                    bodyShape?: string | null;
                    height?: number | null;
                    numberOfDoors?: number | null;
                    numberOfSeats?: number | null;
                    kerbWeight?: number | null;
                    fuelTankCapacity?: number | null;
                    wheelBase?: number | null;
                    carLength?: number | null;
                    width?: number | null;
                    numberOfAxles?: number | null;
                    grossVehicleWeight?: number | null;
                    grossCombinedWeight?: number | null;
                } | null;
                engine?: {
                    fuelCatalyst?: string | null;
                    stroke?: number | null;
                    valvesPerCylinder?: number | null;
                    aspiration?: string | null;
                    fuelSystem?: string | null;
                    numberOfCylinders?: number | null;
                    cylinderArrangement?: string | null;
                    valveGear?: string | null;
                    location?: string | null;
                    description?: string | null;
                    bore?: number | null;
                    make?: string | null;
                } | null;
                performance?: {
                    torque?: {
                        ftLb?: number | null;
                        nm?: number | null;
                        rpm?: number | null;
                    } | null;
                    power?: {
                        bhp?: number | null;
                        rpm?: number | null;
                        kw?: number | null;
                    } | null;
                    maxSpeed?: {
                        kph?: number | null;
                        mph?: number | null;
                    } | null;
                    co2?: number | null;
                } | null;
                general?: {
                    powerDelivery?: string | null;
                    typeApprovalCategory?: string | null;
                    seriesDescription?: string | null;
                    driverPosition?: string | null;
                    drivingAxle?: string | null;
                    euroStatus?: string | null;
                    isLimitedEdition?: boolean | null;
                } | null;
                consumption?: {
                    extraUrban?: {
                        lkm?: number | null;
                        mpg?: number | null;
                    } | null;
                    urbanCold?: {
                        lkm?: number | null;
                        mpg?: number | null;
                    } | null;
                    combined?: {
                        lkm?: number | null;
                        mpg?: number | null;
                    } | null;
                } | null;
            } | null;
            /**
             * @description Year and month of first registration
             * @example 2007-04
             */
            yearMonthFirstRegistered?: string;
            /**
             * @description Number of gears
             * @example 5
             */
            gearCount?: number;
            /**
             * @description Wheel plan
             * @example 2 AXLE RIGID BODY
             */
            wheelPlan?: string;
            /**
             * @description Vehicle class
             * @example Car
             */
            vehicleClass?: string;
            /**
             * @description Engine number
             * @example 3707215
             */
            engineNumber?: string;
            /**
             * @description Gross weight in kg
             * @example 1590
             */
            grossWeight?: number;
            /**
             * @description Country of origin
             * @example Italy
             */
            manufactureCountry?: string;
            /**
             * @description Euro emission standard
             * @example 4
             */
            euroEmissionStandard?: string;
            /**
             * @description Combined fuel consumption in MPG
             * @example 46.3
             */
            fuelConsumptionMpg?: number;
            /**
             * @description Whether the car has been soft deleted
             * @default false
             * @example false
             */
            isDeleted: boolean;
            /** @description List of bookings associated with this car */
            bookings?: {
                /**
                 * Format: uuid
                 * @description UUID of the booking
                 */
                id: string;
                /**
                 * @description Booking location
                 * @example Client's garage
                 */
                location: string;
                /**
                 * @description Total price for the booking
                 * @example 500
                 */
                totalPrice: number;
            }[];
            /**
             * Format: date-time
             * @description Timestamp of car registration
             * @example 2024-01-01T00:00:00.000Z
             */
            createdAt: string;
        };
        Payment: Record<string, never>;
        Admin: {
            /**
             * Format: uuid
             * @description UUID of the user
             */
            id: string;
            /** @example John */
            firstName: string;
            /** @example Doe */
            lastName: string;
            /** @example password123 */
            password: string;
            /**
             * Format: email
             * @example john.doe@example.com
             */
            email: string;
            /** @example +123456789 */
            phone?: string;
            /** @example 12345 */
            zipCode?: string;
            /**
             * @description Role of the user (client, mechanic, admin)
             * @example client
             * @enum {string}
             */
            role: "client" | "mechanic" | "admin";
            /** @example acct_123ABC */
            stripeAccountId?: string;
            /**
             * @default false
             * @example false
             */
            isVerified: boolean;
            /**
             * Format: date-time
             * @description Timestamp of account creation
             * @example 2024-01-01T00:00:00.000Z
             */
            createdAt: string;
            /**
             * Format: date-time
             * @description Timestamp of account update
             * @example 2024-01-01T00:00:00.000Z
             */
            updatedAt: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
